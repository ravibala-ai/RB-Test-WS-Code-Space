# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

<<<<<<< HEAD
# Diagnostic reports (https://nodejs.org/api/report.html)
=======
# Diagnostic reports
>>>>>>> cdfa64e (My first vesion of the WS for Task app)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

<<<<<<< HEAD
# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

=======
>>>>>>> cdfa64e (My first vesion of the WS for Task app)
# Dependency directories
node_modules/
jspm_packages/

<<<<<<< HEAD
# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
=======
# TypeScript cache
*.tsbuildinfo

# dotenv environment variable files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache
>>>>>>> cdfa64e (My first vesion of the WS for Task app)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

<<<<<<< HEAD
# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
=======
# Backend build output
backend/dist/

# Frontend build output
frontend/.next/
frontend/out/
frontend/node_modules/

# Backend environment files
backend/.env
backend/.env.local

# Frontend environment files
frontend/.env
frontend/.env.local

# Backend logs
backend/logs/
backend/*.log

# Frontend logs
frontend/logs/
frontend/*.log

# IDE-specific files
.vscode/
.idea/

# Temporary files
*.tmp
*.swp
*.bak
*.orig

# Yarn v2
>>>>>>> cdfa64e (My first vesion of the WS for Task app)
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
<<<<<<< HEAD
=======

# DynamoDB Local files
.dynamodb/

# Serverless directories
.serverless/
>>>>>>> cdfa64e (My first vesion of the WS for Task app)
